#!/usr/bin/env python3

import json
from glob import glob
from os import environ, path
import requests
import sys
import subprocess
from ruamel.yaml import YAML
from rich.console import Console

con = Console()

meta = YAML(typ="safe", pure=True).load(open("zenodo.yml"))
headers = {"Content-Type": "application/json"}


def check_status(r):
    code = r.status_code
    if code // 100 != 2:
        raise RuntimeError(f"Request failed with code {code}! \n{r.json()}")


if __name__ == "__main__":
    if "ZENODO_TOKEN" not in environ:
        raise ValueError("ZENODO_TOKEN env variable needs to be set!")
    token = environ["ZENODO_TOKEN"]
    params = {"access_token": token}

    version = meta["version"]
    meta["title"] = "MICOM model databases version %s" % version

    con.log(f"[green] Starting release for version {version}.")

    con.log(":hammer: Creating new Zenodo deposition...")
    r = requests.post(
        "https://zenodo.org/api/deposit/depositions",
        params=params,
        json={},
        headers=headers
    )
    check_status(r)
    deposition = r.json()
    bucket_url = deposition["links"]["bucket"]
    con.log(f"[green]Successfully created the new deposition {deposition['id']}.")

    con.log(":hammer: Uploading metadata...")
    r = requests.put(
        "https://zenodo.org/api/deposit/depositions/%s" % deposition["id"],
        params=params,
        data=json.dumps({"metadata": meta}),
        headers=headers
    )
    check_status(r)
    con.log("[green]Uploaded metadata.")

    files = glob(f"recipes/*/databases/*_{version}.qza")
    uploads = {}
    for fi in files:
        name = path.basename(fi)
        con.log(f":hammer: Uploading {name}...")
        with open(fi, "rb") as fp:
            r = requests.put(
                "%s/%s" % (bucket_url, name),
                data=fp,
                params=params,
            )
        check_status(r)
        con.log(f"[green]Finished uploading {name}.")
        uploads[name] = r.json()

    con.log(":hammer: Publishing deposition...")
    r = requests.post(
        "https://zenodo.org/api/deposit/depositions/%s/actions/publish" % deposition["id"],
        params=params
    )
    check_status(r)
    final = r.json()
    with open(path.join("release_notes", f"{version}.txt"), "w") as rn:
        rn.write(f"MICOM model databases version {version}.\n\n{final['doi_url']}\n")
    con.log(f"[green]Published the new release to {final['doi_url']}")
    with open(path.join("release_notes", version + ".json"), "w") as log:
        json.dump(final, log, indent=4)

